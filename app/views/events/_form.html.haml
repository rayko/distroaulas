- semantic_form_for @event do |f|
  - f.inputs do
    = f.input :calendar
    = f.input :plan, :as => :select, :collection => Plan.all
    = image_tag 'loading.gif', :class => "loading-icon-small career-loading"
    = f.input :career, :as => :select, :collection => Career.all
    = image_tag 'loading.gif', :class => "loading-icon-small matter-loading"
    = f.input :matter, :collection => Matter.all
    = f.input :name
    = image_tag 'loading.gif', :class => "loading-icon-small responsible-loading"
    = f.input :responsible
    - if session[:new_event_date]
      = f.input :start_date, :as => :date_picker, :input_html => {:value => Date.parse(session[:new_event_date]).strftime("%d/%m/%Y")}
    - else
      = f.input :start_date, :as => :date_picker
    = f.input :start_time, :as => :time
    = f.input :end_time, :as => :time


    = link_to t('.check_free_spaces'), '#none', :class => 'check_free_spaces', :id => 'check_free_spaces'
    %br
    = image_tag 'loading.gif', :class => "loading-icon-small spaces-loading"
    - if session[:new_event_space_id]
      = f.input :space, :as => :select, :collection => [Space.find_by_id(session[:new_event_space_id])]
    - else
      = f.input :space, :as => :select, :collection => []


    = text_field_tag :rdate_picker, '', :class => 'ui-date-picker', :style => "margin-left: 25%"
    = link_to t('.links.add'), '#none', :class => 'add_new_rdate'
    = f.input :rdate, :as => :string, :input_html => {:class => "rdate-tagbox"}

    = text_field_tag :exdate_picker, '', :class => 'ui-date-picker', :style => "margin-left: 25%"
    = link_to t('.links.add'), '#none', :class => 'add_new_exdate'
    = f.input :exdate, :as => :string, :input_html => {:class => "exdate-tagbox"}


    = f.input :recurrent

    = f.input :until_date, :as => :datetime, :hint => t('.hints.until_date')
    = f.input :freq, :as => :select, :collection => [[t('.daily'), 'DAILY'], [t('.weekly'), 'WEEKLY'], [t('.monthly'), 'MONTHLY'], [t('.yearly'), 'YEARLY']], :include_blank => false, :hint => t('.hints.freq')
    = f.input :interval, :as => :select, :collection => [1,2,3,4,5,6], :hint => t('.hints.interval')
    // = f.input :byday, :as => :check_boxes, :collection => [['Monday', 'MON',], ['Tuesday', 'TUE',], ['Wensday', 'WEN',], ['Thursday', 'THU',], ['Friday', 'FRI',], ['Saturday', 'SAT',], ['Sunday', 'SUN',]]
    = f.input :byday, :hint => t('.hints.days_of_reccurrence')
    = f.input :count, :as => :select, :collection => [1,2,3,4,5,6,7,8,9,10], :hint => t('.hints.count')
  = f.buttons do
    = f.commit_button t('.buttons.commit')
